---
title: Installing PredictionIO on Linux / Mac OS X
---

## Quick Install

NOTE: <span class="new">**New!**</span> PredictionIO can now be installed with a single command:<br />
`$ bash -c "$(curl -s https://install.prediction.io/install.sh)"`

The above script will complete the rest of the instructions on this page for you and you can proceed to the [Recommendation QuickStart](/recommendation/quickstart/) or [Classification QuickStart](/classification/quickstart/).

## Manual Install

If you don't want to use the install script above, you can follow the steps below to setup PredictionIO and its dependencies.

### Download PredictionIO

Simply download PredictionIO's binary distribution and extract it.

```
$ wget http://download.prediction.io/PredictionIO-<%= data.versions.pio %>.tar.gz
$ tar zxvf PredictionIO-<%= data.versions.pio %>.tar.gz
$ cd PredictionIO-<%= data.versions.pio %>
```

### Installing Dependencies



#### Spark Setup

Apache Spark is the default processing engine for PredictionIO. Download [Apache
Spark release 1.2.0 package hadoop2.4](http://spark.apache.org/downloads.html).
Extract the file, and set the `SPARK_HOME` configuration in `conf/pio-env.sh` to
the Spark directory.

```
$ wget http://d3kbcqa49mib13.cloudfront.net/<%= data.versions.spark_download_filename %>.tgz
$ tar zxvf <%= data.versions.spark_download_filename %>.tgz
```

After that, edit `conf/pio-env.sh` in your PredictionIO installation directory.
For example,

```
SPARK_HOME=/home/abc/Downloads/<%= data.versions.spark_download_filename %>
```

#### Elasticsearch Setup

By default, PredictionIO uses Elasticsearch at localhost as the data store to
store its metadata. Simply install and run
[Elasticsearch](http://www.elasticsearch.org/), which looks like this:

```
$ wget https://download.elasticsearch.org/elasticsearch/elasticsearch/<%= data.versions.elasticsearch_download_filename %>.tar.gz
$ tar zxvf <%= data.versions.elasticsearch_download_filename %>.tar.gz
$ cd <%= data.versions.elasticsearch_download_filename %>
$ bin/elasticsearch
```

If you are using a shared network, change the `network.host` line in
`config/elasticsearch.yml` to `network.host: 127.0.0.1` because by default,
Elasticsearch looks for other machines on the network upon setup and you may run
into weird errors if there are other machines that is also running
Elasticsearch.

If you are not using the default setting at localhost. You may change the following in ```conf/pio-env.sh``` to fit your setup.

```
PIO_STORAGE_SOURCES_ELASTICSEARCH_TYPE=elasticsearch
PIO_STORAGE_SOURCES_ELASTICSEARCH_HOSTS=localhost
PIO_STORAGE_SOURCES_ELASTICSEARCH_PORTS=9300
```

#### HBase Setup<a class="anchor" name="hbase">&nbsp;</a>

By default, PredictionIO's Data API uses HBase at localhost as the data store
for event data.

```
$ wget http://archive.apache.org/dist/hbase/<%= data.versions.hbase_basename %>/<%= data.versions.hbase_basename %>-<%= data.versions.hbase_variant %>.tar.gz
$ tar zxvf <%= data.versions.hbase_basename %>-<%= data.versions.hbase_variant %>.tar.gz
$ cd <%= data.versions.hbase_basename %>-<%= data.versions.hbase_dir_suffix %>
```

You will need to at least add a minimal configuration to HBase to start it in
standalone mode. Details can be found
[here](http://hbase.apache.org/book/quickstart.html). Here, we are showing a
sample minimal configuration.

INFO: For production deployment, run a fully distributed HBase configuration.

Edit `conf/hbase-site.xml` and put the following in. You may replace `/home/abc`
with your own home directory.

```
<configuration>
  <property>
    <name>hbase.rootdir</name>
    <value>file:///home/abc/hbase</value>
  </property>
  <property>
    <name>hbase.zookeeper.property.dataDir</name>
    <value>/home/abc/zookeeper</value>
  </property>
</configuration>
```
Check the local.log file under the logs/ directory to make sure it's started correctly.

Now you may start HBase.

```
$ bin/start-hbase.sh
starting master, logging to /home/abc/<%= data.versions.hbase_basename %>-<%= data.versions.hbase_dir_suffix %>/bin/../logs/hbase-abc-master-yourhost.local.out
```

Note that even though the command returns immediately, you may have to wait for
up to a minute before all the initialization is done. If you want to be
absolutely safe, check your HBase log (replace `.out` from the filename shown
after `bin/start-hbase.sh` with `.log`) and look for something similar to the
following.

```
2014-11-20 15:37:32,359 INFO  [M:0;10.0.27.242:52547] master.HMaster: Master has completed initialization
```

With this, you can confidently run the Event Server successfully.

Now you have installed everything you need to run PredictionIO!

#### [Next: Recommendation Engine Quick Start](/recommendation/quickstart/)
